version: '3.8'

services:
  websocket-server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - HOST=0.0.0.0
      - CORS_ORIGIN=http://localhost:3000
      - LOG_LEVEL=debug
      - REDIS_ENABLED=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - JWT_SECRET=dev_secret_key_change_in_production
      - FIREBASE_PROJECT_ID=ai-agent-network-dev
    volumes:
      - ./src:/app/src
      - ./types:/app/types
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./nodemon.json:/app/nodemon.json
    depends_on:
      - redis
    command: npm run dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  redis-data:

networks:
  ai-agent-network: