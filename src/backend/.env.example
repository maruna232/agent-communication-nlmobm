# AI Agent Network - Backend Server Environment Variables
# ========================================================================
# This is an example configuration file for the AI Agent Network backend.
# Copy this file to '.env' and customize the values for your environment.
# IMPORTANT: Never commit your actual .env file to version control!
# ========================================================================

# ----------------------------------------
# Server Configuration
# ----------------------------------------
# NODE_ENV: Set to 'development', 'test', or 'production'
NODE_ENV=development

# PORT: The port the WebSocket server will listen on
PORT=3001

# HOST: The hostname to bind to
HOST=localhost

# CORS_ORIGIN: Allowed origin for CORS (for HTTP endpoints)
CORS_ORIGIN=http://localhost:3000

# ----------------------------------------
# WebSocket Configuration
# ----------------------------------------
# WS_PATH: Path for WebSocket connections
WS_PATH=/socket.io

# WS_MAX_CONNECTIONS: Maximum allowed concurrent WebSocket connections
WS_MAX_CONNECTIONS=1000

# WS_PING_INTERVAL: How often to send ping packets (in ms)
WS_PING_INTERVAL=25000

# WS_PING_TIMEOUT: How long to wait for pong response (in ms)
WS_PING_TIMEOUT=10000

# WS_UPGRADE_TIMEOUT: HTTP upgrade to WebSocket timeout (in ms)
WS_UPGRADE_TIMEOUT=5000

# ----------------------------------------
# Redis Configuration
# ----------------------------------------
# Enable Redis for scaling with multiple WebSocket server instances
# REDIS_ENABLED: Set to 'true' to enable Redis for Socket.io adapter
REDIS_ENABLED=false

# Redis connection details
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_KEY_PREFIX=ai-agent-network:

# ----------------------------------------
# Authentication Configuration
# ----------------------------------------
# JWT_SECRET: Secret key for signing JWTs (change this to a secure random value!)
JWT_SECRET=your-jwt-secret-key-here

# JWT_ALGORITHM: Algorithm to use for JWT signing
JWT_ALGORITHM=HS256

# JWT_EXPIRES_IN: Token expiration time in seconds (1 hour default)
JWT_EXPIRES_IN=3600

# JWT_REFRESH_EXPIRES_IN: Refresh token expiration in seconds (14 days default)
JWT_REFRESH_EXPIRES_IN=1209600

# ----------------------------------------
# Firebase Configuration
# ----------------------------------------
# Firebase service account details for server-side verification
FIREBASE_PROJECT_ID=your-firebase-project-id
FIREBASE_PRIVATE_KEY=your-firebase-private-key
FIREBASE_CLIENT_EMAIL=your-firebase-client-email

# ----------------------------------------
# Encryption Configuration
# ----------------------------------------
# Settings for data encryption
ENCRYPTION_ALGORITHM=aes-256-gcm
ENCRYPTION_KEY_LENGTH=32
ENCRYPTION_ITERATIONS=10000

# Path to the server's private key for secure communications
SERVER_KEY_PATH=./keys/server_key.pem

# ----------------------------------------
# Rate Limiting Configuration
# ----------------------------------------
# RATE_LIMIT_WS_MESSAGES: Maximum WebSocket messages per second per connection
RATE_LIMIT_WS_MESSAGES=10

# RATE_LIMIT_WS_CONNECTIONS: Maximum new WebSocket connections per minute per IP
RATE_LIMIT_WS_CONNECTIONS=5

# RATE_LIMIT_API_REQUESTS: Maximum HTTP API requests per minute per IP
RATE_LIMIT_API_REQUESTS=100

# RATE_LIMIT_AUTH_ATTEMPTS: Maximum authentication attempts per hour per IP
RATE_LIMIT_AUTH_ATTEMPTS=5

# ----------------------------------------
# Logging Configuration
# ----------------------------------------
# LOG_LEVEL: Minimum level to log (error, warn, info, http, verbose, debug, silly)
LOG_LEVEL=info

# LOG_FORMAT: Log format (combined, common, dev, short, tiny)
LOG_FORMAT=combined

# LOG_DIRECTORY: Directory to store log files
LOG_DIRECTORY=./logs